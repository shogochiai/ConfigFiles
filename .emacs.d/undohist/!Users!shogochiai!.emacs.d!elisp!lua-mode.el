
((digest . "8322513c8bf8dd0b87890987bc842541") (undo-list (nil rear-nonsticky nil 73112 . 73113) (nil fontified nil 1 . 73113) (1 . 73113) (t 21046 19078 0 0) nil (137 . 138) (t 21046 19072 0 0) nil (#("
" 0 1 (fontified t)) . -303) ((marker) . -1) ((marker) . -1) nil (#("を" 0 1 (fontified t)) . -304) nil (#("追" 0 1 (fontified t)) . -305) nil (#("記" 0 1 (rear-nonsticky t fontified t)) . -306) (t 21046 19070 0 0) nil (307 . 308) (nil rear-nonsticky nil 306 . 307) (nil fontified nil 137 . 307) (137 . 307) (t 21046 19069 0 0) nil (#("
;;;; This snippet enables lua-mode
;; This line is not necessary, if lua-mode.el is already on your load-path
(add-to-list 'load-path \"/Users/shogochiai/.emacs.d/el-get/lua-mode/lua-mode.el\")

(autoload 'lua-mode \"lua-mode\" \"Lua editing mode.\" t)
(add-to-list 'auto-mode-alist '(\"\\\\.lua$\" . lua-mode))
(add-to-list 'interpreter-mode-alist '(\"lua\" . lua-mode))
~                                                             
" 0 1 (fontified t) 1 6 (fontified t face font-lock-comment-delimiter-face) 6 36 (fontified t face font-lock-comment-face) 36 39 (fontified t face font-lock-comment-delimiter-face) 39 111 (fontified t face font-lock-comment-face) 111 135 (fontified t) 135 191 (fontified t face font-lock-string-face) 191 214 (fontified t) 214 224 (fontified t face font-lock-string-face) 224 225 (fontified t) 225 244 (fontified t face font-lock-doc-face) 244 280 (fontified t) 280 289 (fontified t face font-lock-string-face) 289 342 (fontified t) 342 347 (fontified t face font-lock-string-face) 347 361 (fontified t) 361 362 (fontified t) 362 422 (fontified t face (my-face-spc-at-eol)) 422 423 (rear-nonsticky t fontified t face (my-face-spc-at-eol)) 423 424 (fontified t)) . -137) (t 21046 19026 0 0) ((marker) . -248) ((marker) . -248) ((marker . 73359) . -194) ((marker . 73359) . -194) ((marker . 73304) . -193) ((marker . 73304) . -193) ((marker) . -111) ((marker) . -111) ((marker) . -303) ((marker) . -303) ((marker) . -361) ((marker) . -361) ((marker . 73249) . -111) nil (1 . 3) (t 21046 19024 0 0) nil (71 . 73) (#("設定" 0 2 (fontified t face font-lock-comment-face)) . -71) (71 . 73) (#("せってい" 0 4 (fontified t face font-lock-comment-face)) . -71) (71 . 75) (#("せって" 0 3 (fontified t face font-lock-comment-face)) . -71) (71 . 74) (#("せっt" 0 3 (fontified t face font-lock-comment-face)) . -71) (71 . 74) (#("せt" 0 2 (fontified t face font-lock-comment-face)) . -71) (71 . 73) (#("せ" 0 1 (fontified t face font-lock-comment-face)) . -71) (71 . 72) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -71) (71 . 72) (t 21046 19022 0 0) (66 . 71) (t 21046 19020 0 0) nil (#("a" 0 1 (fontified t face font-lock-comment-face)) . -66) nil (66 . 67) nil (#("c" 0 1 (fontified t face font-lock-comment-face)) . -66) nil (#("o" 0 1 (fontified t face font-lock-comment-face)) . -67) nil (#("r" 0 1 (fontified t face font-lock-comment-face)) . -68) nil (#("o" 0 1 (fontified t face font-lock-comment-face)) . -69) nil (#("n" 0 1 (fontified t face font-lock-comment-face)) . -70) nil (#("a" 0 1 (fontified t face font-lock-comment-face)) . -71) nil (#("/" 0 1 (fontified t face font-lock-comment-face)) . -72) nil (#("l" 0 1 (fontified t face font-lock-comment-face)) . -73) nil (#("u" 0 1 (fontified t face font-lock-comment-face)) . -74) nil (#("a" 0 1 (fontified t face font-lock-comment-face)) . -75) nil (#("関" 0 1 (fontified t face font-lock-comment-face)) . -76) nil (#("係" 0 1 (fontified t face font-lock-comment-face)) . -77) (t 21046 19016 0 0) nil (1 . 2) (t 21046 19015 0 0) nil (#("
" 0 1 (fontified t)) . -1) (t 21046 19014 0 0) nil (1 . 2) (t 21046 19011 0 0) nil (562 . 563) (nil rear-nonsticky nil 561 . 562) (nil fontified nil 1 . 562) (1 . 562) (t 0 0 0 -1000)))
