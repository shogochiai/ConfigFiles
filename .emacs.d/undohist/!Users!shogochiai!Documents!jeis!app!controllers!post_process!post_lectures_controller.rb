
((digest . "f7756f638794c3af532d386e5dbe2261") (undo-list nil (#("
" 0 1 (fontified t)) . -134) (t 21077 14607 0 0) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker . 134) . -1) ((marker) . -1) ((marker) . -1) nil (#("
  def show
    @post_lecture = NewLecture.find(params[:id])
    @report = ThinReports::Report.new layout: File.join(Rails.root, 'app', 'reports', \"#{@post_lecture.title}.tlf\")
    
    case @post_lecture.id
      
    when 1
      invoke_OCR
    end
  end



  private

  def invoke_OCR
    @report.start_new_page do |page|
      #page.values
    end

    respond_to do |format|
      format.pdf {
        send_data @report.generate, filename: \"#{@post_lecture.title}.pdf\",
                                    type: 'application/pdf',
                                    disposition: 'inline'
      }
    end 
  end" 0 3 (fontified t) 3 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t syntax-table nil face font-lock-function-name-face) 11 12 (fontified t) 12 16 (fontified t) 16 17 (fontified t face font-lock-variable-name-face) 17 29 (fontified t face font-lock-variable-name-face) 29 32 (fontified t) 32 35 (fontified t face font-lock-type-face) 35 42 (fontified t face font-lock-type-face) 42 48 (fontified t) 48 54 (fontified t face font-lock-builtin-face) 54 55 (fontified t) 55 58 (fontified t face font-lock-constant-face) 58 59 (fontified t) 59 60 (fontified t syntax-table nil) 60 61 (fontified t) 61 65 (fontified t) 65 72 (fontified t face font-lock-variable-name-face) 72 75 (fontified t) 75 94 (fontified t face font-lock-type-face) 94 107 (fontified t) 107 111 (fontified t face font-lock-type-face) 111 117 (fontified t) 117 122 (fontified t face font-lock-type-face) 122 129 (fontified t) 129 134 (fontified t face font-lock-string-face) 134 136 (fontified t) 136 145 (fontified t face font-lock-string-face) 145 147 (fontified t) 147 148 (fontified t face font-lock-string-face) 148 149 (fontified t syntax-table (1) face font-lock-variable-name-face) 149 151 (fontified t face font-lock-variable-name-face) 151 163 (fontified t face font-lock-variable-name-face) 163 170 (fontified t face font-lock-variable-name-face) 170 175 (fontified t face font-lock-string-face) 175 176 (fontified t syntax-table nil) 176 177 (fontified t) 177 180 (fontified t face (my-face-spc-at-eol)) 180 181 (fontified t syntax-table nil face (my-face-spc-at-eol)) 181 182 (fontified t) 182 184 (fontified t) 184 186 (fontified t) 186 190 (fontified t face font-lock-keyword-face) 190 191 (fontified t) 191 192 (fontified t face font-lock-variable-name-face) 192 204 (fontified t face font-lock-variable-name-face) 204 206 (fontified t) 206 207 (fontified t syntax-table nil) 207 208 (fontified t) 208 213 (fontified t face (my-face-spc-at-eol)) 213 214 (fontified t syntax-table nil face (my-face-spc-at-eol)) 214 215 (fontified t) 215 218 (fontified t) 218 219 (fontified t) 219 223 (fontified t face font-lock-keyword-face) 223 224 (fontified t) 224 225 (fontified t syntax-table nil) 225 226 (fontified t) 226 241 (fontified t) 241 242 (fontified t syntax-table nil) 242 243 (fontified t) 243 247 (fontified t) 247 249 (fontified t face font-lock-keyword-face) 249 250 (fontified t syntax-table nil face font-lock-keyword-face) 250 251 (fontified t) 251 253 (fontified t) 253 255 (fontified t face font-lock-keyword-face) 255 256 (fontified t syntax-table nil face font-lock-keyword-face) 256 257 (fontified t) 257 258 (fontified t) 258 268 (fontified t) 268 269 (fontified t syntax-table nil) 269 273 (fontified t) 273 276 (fontified t face font-lock-keyword-face) 276 277 (fontified t) 277 286 (fontified t face font-lock-function-name-face) 286 287 (fontified t syntax-table nil face font-lock-function-name-face) 287 292 (fontified t) 292 299 (fontified t face font-lock-variable-name-face) 299 315 (fontified t) 315 317 (fontified t face font-lock-keyword-face) 317 323 (fontified t) 323 324 (fontified t syntax-table nil) 324 331 (fontified t) 331 332 (fontified t face font-lock-comment-delimiter-face) 332 342 (fontified t face font-lock-comment-face) 342 343 (fontified t syntax-table nil face font-lock-comment-face) 343 344 (fontified t face font-lock-comment-face) 344 348 (fontified t) 348 350 (fontified t face font-lock-keyword-face) 350 351 (fontified t syntax-table nil face font-lock-keyword-face) 351 368 (fontified t) 368 370 (fontified t face font-lock-keyword-face) 370 378 (fontified t) 378 379 (fontified t syntax-table nil) 379 397 (fontified t) 397 398 (fontified t syntax-table nil) 398 399 (fontified t) 399 417 (fontified t) 417 424 (fontified t face font-lock-variable-name-face) 424 445 (fontified t) 445 446 (fontified t face font-lock-string-face) 446 447 (fontified t syntax-table (1) face font-lock-variable-name-face) 447 449 (fontified t face font-lock-variable-name-face) 449 461 (fontified t face font-lock-variable-name-face) 461 468 (fontified t face font-lock-variable-name-face) 468 473 (fontified t face font-lock-string-face) 473 474 (fontified t syntax-table nil) 474 475 (fontified t) 475 517 (fontified t) 517 534 (fontified t face font-lock-string-face) 534 535 (fontified t syntax-table nil) 535 536 (fontified t) 536 585 (fontified t) 585 592 (fontified t face font-lock-string-face) 592 593 (fontified t syntax-table nil face font-lock-string-face) 593 594 (fontified t) 594 600 (fontified t) 600 601 (fontified t syntax-table nil) 601 606 (fontified t) 606 609 (fontified t face font-lock-keyword-face) 609 610 (fontified t syntax-table nil face (my-face-spc-at-eol)) 610 611 (fontified t) 611 613 (fontified t) 613 615 (fontified t face font-lock-keyword-face) 615 616 (fontified t syntax-table nil face font-lock-keyword-face)) . -135) (t 21077 14593 0 0) ((marker . 134) . -325) ((marker) . -259) ((marker) . -259) ((marker . 134) . -42) ((marker . 134) . -214) ((marker . 134) . -269) ((marker . 134) . -169) ((marker) . -288) ((marker) . -288) ((marker) . -271) ((marker) . -271) ((marker) . -270) ((marker) . -270) ((marker) . -260) ((marker) . -260) ((marker . 134) . -91) ((marker . 134) . -225) ((marker . 134) . -343) ((marker) . -258) ((marker) . -258) ((marker) . -257) ((marker) . -257) ((marker) . -251) ((marker) . -251) ((marker) . -243) ((marker) . -243) ((marker) . -226) ((marker) . -226) ((marker) . -352) ((marker) . -352) ((marker) . -353) ((marker) . -353) ((marker) . -380) ((marker) . -380) ((marker) . -399) ((marker) . -399) ((marker) . -475) ((marker) . -475) ((marker) . -536) ((marker) . -536) ((marker) . -594) ((marker) . -594) ((marker) . -602) ((marker) . -602) ((marker . 1) . -611) ((marker . 1) . -611) ((marker . 134) . -306) ((marker . 134) . -226) ((marker . 134) . -306) ((marker . 134) . -226) ((marker . 1) . -226) ((marker . 134) . -257) ((marker . 134) . -343) ((marker) . -325) ((marker) . -325) ((marker) . -344) ((marker) . -344) ((marker . 134) . -214) nil (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -319) nil (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -383) nil (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -354) (t 21077 14564 0 0) nil (384 . 385) nil (354 . 355) nil (319 . 320) (t 21077 12791 0 0) nil (114 . 117) (t 21077 12790 0 0) nil (#("P" 0 1 (fontified t face font-lock-type-face)) . -114) nil (#("o" 0 1 (fontified t face font-lock-type-face)) . -115) nil (#("s" 0 1 (fontified t face font-lock-type-face)) . -116) nil (#("t" 0 1 (fontified t face font-lock-type-face)) . -117) (t 21077 12786 0 0) nil (170 . 171) (t 21077 12785 0 0) (168 . 170) nil (#("P" 0 1 (fontified t face font-lock-type-face)) . -168) nil (#("o" 0 1 (fontified t face font-lock-type-face)) . -169) nil (#("s" 0 1 (fontified t face font-lock-type-face)) . -170) nil (#("t" 0 1 (fontified t face font-lock-type-face)) . -171) (t 21077 12778 0 0) nil (#("outside_request" 0 15 (fontified t face font-lock-variable-name-face)) . -153) (168 . 180) (#("outside_request" 0 15 (fontified t face font-lock-variable-name-face)) . -98) (t 21077 12768 0 0) (113 . 125) 14 (t 21077 12768 0 0) nil (#("outside_request" 0 15 (fontified t face font-lock-variable-name-face)) . -592) (607 . 619) (#("outside_request" 0 15 (fontified t face font-lock-variable-name-face)) . -335) (350 . 362) (#("outside_request" 0 15 (fontified t face font-lock-variable-name-face)) . -294) (t 21077 12741 0 0) (309 . 321) 185 (t 21077 12741 0 0) nil (nil fontified t 174 . 185) (nil face font-lock-type-face 174 . 185) (#("OutsideRequest" 0 14 (fontified t face font-lock-type-face)) . -174) (188 . 199) (nil fontified t 117 . 128) (nil face font-lock-type-face 117 . 128) (#("OutsideRequest" 0 14 (fontified t face font-lock-type-face)) . -117) (131 . 142) (#("OutsideRequest" 0 14 (fontified t face font-lock-type-face)) . -34) (t 21077 12716 0 0) (48 . 59) 2 (t 21077 12716 0 0) nil (#("
" 0 1 (fontified t face font-lock-comment-face)) . -2) (t 21077 12702 0 0) nil (2 . 3) (t 21069 19464 0 0)))
